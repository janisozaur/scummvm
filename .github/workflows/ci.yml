name: CI
on: [push, pull_request]
jobs:
  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: win32
            triplet: x86-windows
            vcpkgPackages: 'curl faad2 fluidsynth freetype fribidi libflac libjpeg-turbo libmad libmpeg2 libogg libpng libtheora libvorbis sdl2 sdl2-net zlib'
          - platform: x64
            triplet: x64-windows
            vcpkgPackages: 'curl faad2 fluidsynth freetype fribidi libflac libjpeg-turbo libmad libmpeg2 libogg libpng libtheora libvorbis sdl2 sdl2-net zlib'
          - platform: arm64
            triplet: arm64-windows
            vcpkgPackages: 'curl faad2 fluidsynth freetype libflac libjpeg-turbo libmad libmpeg2 libogg libpng libtheora libvorbis sdl2 sdl2-net zlib'
    env:
      CONFIGURATION: Release
      PLATFORM: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: vcpkg
        uses: lukka/run-vcpkg@v2
        id: runvcpkg
        with:
          vcpkgGitCommitId: 2f7a104d4d6f1f3790db929f85a4086aa6973d7f
          vcpkgTriplet: '${{ matrix.triplet }}'
          vcpkgArguments: '${{ matrix.vcpkgPackages }}'
      - name: Prints output of run-vcpkg's task
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "
      - name: test env
        run: |
          echo "::add-path::$env:VCPKG_ROOT"
          echo $env:VCPKG_ROOT/vcpkg
      - name: Build create_project
        run: |
          cd devtools/create_project/cmake
          cmake .
          cmake --build . -j 2
          ls
          cd ../../../
      - name: Call create_project
        run: |
          mkdir build-scummvm
          cd build-scummvm
          ../devtools/create_project/cmake/Debug/create_project.exe .. --msvc --disable-nasm --disable-opengl --disable-opengles --use-canonical-lib-names
          ls
      - name: set scummvm_libs
        run: |
          echo "::set-env name=SCUMMVM_LIBS::${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}\\installed\\${{ matrix.triplet }}"
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.0
      - name: Build scummvm
        run: |
          cd build-scummvm
          ls
          echo msbuild scummvm.sln /p:Configuration=Release /p:Platform=${{ matrix.platform }}
          msbuild scummvm.sln /m /p:Configuration=Release /p:Platform=${{ matrix.platform }}
      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: build-scummvm
      - name: ls vcpkg
        run: |
          ls $env:VCPKG_ROOT
      - name: vcpkg help
        run: |
          vcpkg.exe install zlib
